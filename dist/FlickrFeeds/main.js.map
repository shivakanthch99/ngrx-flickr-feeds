{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions/tax-calculator.action.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/tax-calculator-details/tax-calculator-details.component.html","webpack:///./src/app/components/tax-calculator-details/tax-calculator-details.component.scss","webpack:///./src/app/components/tax-calculator-details/tax-calculator-details.component.ts","webpack:///./src/app/components/tax-calculator/tax-calculator.component.html","webpack:///./src/app/components/tax-calculator/tax-calculator.component.scss","webpack:///./src/app/components/tax-calculator/tax-calculator.component.ts","webpack:///./src/app/effects/tax-calculator.effect.ts","webpack:///./src/app/models/query.model.ts","webpack:///./src/app/models/result.model.ts","webpack:///./src/app/models/tax-calculator.datasource.ts","webpack:///./src/app/modules/material.module.ts","webpack:///./src/app/reducers/tax-calculator.reducer.ts","webpack:///./src/app/services/tax-calculator.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Action } from '@ngrx/store';\r\nimport { Query } from '../models/query.model';\r\nimport { Result, ResultStore } from \"src/app/models/result.model\";\r\n\r\nexport const CALCULATE_TAX = 'CALCULATE_TAX';\r\nexport const CALCULATE_TAX_COMPLETE = 'CALCULATE_TAX_COMPLETE';\r\n\r\nexport class CalculateTaxAction implements Action\r\n{\r\n    readonly type = CALCULATE_TAX;\r\n    \r\n    constructor(public payload: Query) { }\r\n}\r\n\r\nexport class CalculateTaxCompleteAction implements Action {\r\n    readonly type = CALCULATE_TAX_COMPLETE;\r\n    \r\n    constructor(public payload: ResultStore) {        \r\n    }\r\n}\r\n\r\nexport type TaxCalculatorActions = CalculateTaxAction | CalculateTaxCompleteAction;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <span>Tax Estimation Calculator</span>\\n  </mat-toolbar>\\n<tax-calculator></tax-calculator>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'FlickrFeeds';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './modules/material.module';\n\nimport { taxCalculatorReducer } from './reducers/tax-calculator.reducer';\nimport { TaxCalculatorEffects } from './effects/tax-calculator.effect';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { TaxCalculatorComponent } from './components/tax-calculator/tax-calculator.component';\nimport { TaxCalculatorDetailsComponent } from './components/tax-calculator-details/tax-calculator-details.component';\nimport { TaxCalculatorService } from './services/tax-calculator.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaxCalculatorComponent,\n    TaxCalculatorDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MaterialModule,\n    StoreModule.forRoot({taxStore: taxCalculatorReducer}),\n    EffectsModule.forRoot([TaxCalculatorEffects])\n  ],\n  providers: [TaxCalculatorService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- Gross Column -->\\r\\n    <ng-container matColumnDef=\\\"gross\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Gross </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.gross | currency:'USD':true:'1.2-2'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Superannuation Column -->\\r\\n    <ng-container matColumnDef=\\\"super\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Superannuation </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.super | currency:'USD':true:'1.2-2'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Gross + Supperannuation Column -->\\r\\n    <ng-container matColumnDef=\\\"grossSuper\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Gross + Supperannuation </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{(element.gross + element.super) | currency:'USD':true:'1.2-2'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Tax Column -->\\r\\n    <ng-container matColumnDef=\\\"tax\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Tax </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.tax | currency:'USD':true:'1.2-2'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Net Column -->\\r\\n    <ng-container matColumnDef=\\\"net\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Net </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{(element.gross - element.tax) | currency:'USD':true:'1.2-2'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Net + Supperannuation Column -->\\r\\n    <ng-container matColumnDef=\\\"netSuper\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Net + Supperannuation </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{(element.gross - element.tax + element.super) | currency:'USD':true:'1.2-2'}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"taxColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: taxColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n</div>\"","module.exports = \"div {\\n  max-width: 80%;\\n  margin: 2em auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90YXgtY2FsY3VsYXRvci1kZXRhaWxzL0M6XFxVc2Vyc1xcU2hpdmFrYW50aFxcRG9jdW1lbnRzXFxWaXN1YWwgU3R1ZGlvIDIwMTdcXFByb2plY3RzXFxGbGlja3JGZWVkcy9zcmNcXGFwcFxcY29tcG9uZW50c1xcdGF4LWNhbGN1bGF0b3ItZGV0YWlsc1xcdGF4LWNhbGN1bGF0b3ItZGV0YWlscy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWM7RUFDZCxpQkFBZ0IsRUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3RheC1jYWxjdWxhdG9yLWRldGFpbHMvdGF4LWNhbGN1bGF0b3ItZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XHJcbiAgbWF4LXdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAyZW0gYXV0bztcclxufSJdfQ== */\"","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { Result, ResultColumns, ResultStore } from '../../models/result.model';\r\nimport { TaxCalculatorDataSource } from '../../models/tax-calculator.datasource';\r\n\r\n@Component({\r\n    selector: 'tax-calculator-details',\r\n    templateUrl: './tax-calculator-details.component.html',\r\n    styleUrls: ['./tax-calculator-details.component.scss']\r\n})\r\nexport class TaxCalculatorDetailsComponent implements OnChanges {\r\n    dataSource: TaxCalculatorDataSource;\r\n    @Input() taxDetails: ResultStore;\r\n\r\n    public ngOnChanges(changes: SimpleChanges) {\r\n        if (this.taxDetails) {\r\n            this.dataSource = new TaxCalculatorDataSource([this.taxDetails.taxStore])\r\n        }\r\n    }\r\n\r\n    get taxColumns() {\r\n        return ResultColumns;\r\n    }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n    <mat-card-title>Income Details</mat-card-title>\\r\\n    <mat-card-content>\\r\\n        <form>\\r\\n            <!-- Income Field -->\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Income\\\" type=\\\"number\\\" [formControl]=\\\"income\\\" (keyup)=\\\"search()\\\" required>\\r\\n                <span matPrefix>$&nbsp;</span>\\r\\n                <mat-error *ngIf=\\\"income.invalid\\\">{{validateIncome}}</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- Superannuation Field -->\\r\\n            <mat-form-field [hintLabel]=\\\"superHint\\\">\\r\\n                <input matInput placeholder=\\\"Superannuation\\\" [formControl]=\\\"super\\\" (keyup)=\\\"search()\\\" required>\\r\\n                <span matSuffix>%</span>\\r\\n                <mat-error *ngIf=\\\"super.invalid\\\">{{validateSuper}}</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!--Is Superannuation Included -->\\r\\n            <mat-checkbox color=\\\"primary\\\" [formControl]=\\\"isSuperIncluded\\\" (change)=\\\"search()\\\">\\r\\n                Includes Superannuation\\r\\n            </mat-checkbox>\\r\\n        </form>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n<tax-calculator-details [taxDetails]=\\\"result | async\\\"></tax-calculator-details>\"","module.exports = \"mat-card {\\n  max-width: 30%;\\n  margin: 2em auto; }\\n\\nform {\\n  display: flex;\\n  flex-direction: column; }\\n\\nmat-form-field {\\n  padding-bottom: 1em; }\\n\\nform > * {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90YXgtY2FsY3VsYXRvci9DOlxcVXNlcnNcXFNoaXZha2FudGhcXERvY3VtZW50c1xcVmlzdWFsIFN0dWRpbyAyMDE3XFxQcm9qZWN0c1xcRmxpY2tyRmVlZHMvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHRheC1jYWxjdWxhdG9yXFx0YXgtY2FsY3VsYXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWM7RUFDZCxpQkFBZ0IsRUFDakI7O0FBRUM7RUFDRSxjQUFhO0VBQ2IsdUJBQXNCLEVBQ3ZCOztBQUVEO0VBQ0ksb0JBQW1CLEVBQ3RCOztBQUdIO0VBQ0UsWUFBVyxFQUNaIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90YXgtY2FsY3VsYXRvci90YXgtY2FsY3VsYXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDMwJTtcclxuICBtYXJnaW46IDJlbSBhdXRvO1xyXG59XHJcblxyXG4gIGZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICAgIFxyXG4gIH1cclxuXHJcbiAgbWF0LWZvcm0tZmllbGR7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgfVxyXG5cclxuXHJcbmZvcm0gPiAqIHtcclxuICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","import { Component } from '@angular/core';\r\nimport { Store } from \"@ngrx/store\";\r\nimport { NgForm, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport * as query from '../../models/query.model';\r\nimport { Result, ResultStore } from '../../models/result.model';\r\nimport { taxStore } from '../../reducers/tax-calculator.reducer'\r\nimport * as actions from '../../actions/tax-calculator.action';\r\n\r\n\r\n@Component({\r\n    selector: 'tax-calculator',\r\n    templateUrl: './tax-calculator.component.html',\r\n    styleUrls: ['./tax-calculator.component.scss']\r\n})\r\nexport class TaxCalculatorComponent {\r\n    result: any;\r\n    income = new FormControl(query.messageEmpty, [Validators.required, Validators.pattern(query.incomeRegex)]);\r\n    super = new FormControl(query.superAnnuationDefault, [Validators.required, this.superValueCheck]);\r\n    isSuperIncluded = new FormControl(false);\r\n\r\n    constructor(private store: Store<ResultStore>) {\r\n        this.result = store.select(taxStore);\r\n    }\r\n\r\n    get validateIncome() {\r\n        if (this.income.hasError(query.required)) {\r\n            return query.messageRequired;\r\n        } else if (this.income.hasError(query.pattern)) {\r\n            return query.messageInvalidIncome;\r\n        } else {\r\n            return query.messageEmpty;\r\n        }\r\n    }\r\n\r\n    get validateSuper() {\r\n        if (this.super.hasError(query.required)) {\r\n            return query.messageRequired;\r\n        } else if (this.super.hasError(query.invalidsuper)) {\r\n            return query.messageInvalidSuper;\r\n        } else {\r\n            return query.messageEmpty;\r\n        }\r\n    }\r\n\r\n    superValueCheck(input: FormControl) {\r\n        let isValid = input.value >= 9.5;\r\n        return isValid ? null : { invalidsuper: !isValid };\r\n    }\r\n\r\n    get superHint() {\r\n        return query.superAnnuationHint;\r\n    }\r\n\r\n    search() {\r\n        if (this.income.valid && this.super.valid) {\r\n            let q = new query.Query();\r\n            q.income = this.income.value;\r\n            q.super = this.super.value;\r\n            q.isSuperIncluded = this.isSuperIncluded.value;\r\n            this.store.dispatch(new actions.CalculateTaxAction(q));\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { Observable, of }  from 'rxjs';\r\nimport { switchMap, map, take, tap, mergeMap } from 'rxjs/operators';\r\n\r\nimport * as actions from '../actions/tax-calculator.action';\r\nimport { Result, ResultStore } from '../models/result.model';\r\nimport { TaxCalculatorService } from '../services/tax-calculator.service';\r\n\r\n@Injectable()\r\nexport class TaxCalculatorEffects {\r\n    \r\n    constructor(private actions$: Actions<actions.CalculateTaxAction>,\r\n        private taxCalculatorService: TaxCalculatorService) {  }\r\n\r\n    @Effect()\r\n    search$: Observable<Action> = this.actions$.pipe(\r\n        ofType<actions.CalculateTaxAction>(actions.CALCULATE_TAX),\r\n        mergeMap((query: any) => { \r\n            let result = this.taxCalculatorService.calculateTax(query);\r\n            return of(new actions.CalculateTaxCompleteAction({ taxStore: result }));\r\n         })\r\n    );\r\n}","export class Query {\r\n    public income: number;\r\n    public super: number;\r\n    public isSuperIncluded: boolean;\r\n}\r\n\r\n// all these can be moved to resource file in future.\r\nexport const superAnnuationDefault = '9.5';\r\nexport const superAnnuationHint = '(>= 9.5%)';\r\nexport const messageRequired = 'You must enter a value';\r\nexport const messageInvalidIncome = 'Income must be greater than $0';\r\nexport const messageInvalidSuper = 'Superannuation must be greater than or equal to 9.5%';\r\nexport const messageEmpty = '';\r\nexport const required = 'required';\r\nexport const pattern = 'pattern';\r\nexport const invalidsuper = 'invalidsuper';\r\nexport const incomeRegex = '^[1-9][0-9]*$';\r\n","export class Result {\r\n    public gross: number;\r\n    public super: number;\r\n    public tax: number;\r\n}\r\n\r\nexport class ResultStore {\r\n    public taxStore: Result;\r\n}\r\n\r\nexport const ResultColumns = ['gross', 'super', 'grossSuper', 'tax', 'net', 'netSuper'];","import { DataSource } from '@angular/cdk/collections';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Result } from './result.model';\r\n\r\nexport class TaxCalculatorDataSource extends DataSource<any> {\r\n    constructor(public taxStore: any) {\r\n        super();\r\n    }\r\n    /* Connect function called by the table to retrieve one stream containing the data to render. */\r\n    connect(): Observable<any> {\r\n        return of(this.taxStore);\r\n    }\r\n\r\n    public disconnect() { }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatCheckboxModule,\r\n  MatTableModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatTableModule\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class MaterialModule {}","import { Action } from '@ngrx/store';\r\n\r\nimport { Query } from '../models/query.model';\r\nimport { Result } from '../models/result.model';\r\nimport * as actions from '../actions/tax-calculator.action';\r\n\r\nexport const initialState = {\r\n    taxStore: {\r\n        gross: 0,\r\n        super: 0,\r\n        tax: 0\r\n    }\r\n}\r\n\r\nexport function taxCalculatorReducer(state = initialState, action: actions.TaxCalculatorActions) {\r\n    switch(action.type){\r\n        case actions.CALCULATE_TAX_COMPLETE:\r\n            return action.payload; \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const taxStore = 'taxStore';","import { Injectable } from '@angular/core';\r\n\r\nimport { Query } from '../models/query.model';\r\nimport { Result, ResultStore } from '../models/result.model';\r\n\r\n@Injectable()\r\nexport class TaxCalculatorService {\r\n\r\n    // the below tax calculation is generally fetched from a service\r\n    // the below calculation code can be replaced by a service call\r\n    // and map the data to payload and dispatch with sucess/failure call\r\n    calculateTax(query: Query) {\r\n        let result = new Result();\r\n        let gross = 0;\r\n        let superAnnuation = 0;\r\n\r\n        if (query.isSuperIncluded) {\r\n            let i = query.income;\r\n            let s = query.super * (i / 100);\r\n            gross = (i / (i + s)) * i;\r\n            superAnnuation = i - gross;\r\n        } else {\r\n            gross = query.income;\r\n            superAnnuation = query.super * (gross / 100);\r\n        }\r\n\r\n        let tax = 0;\r\n        if (gross <= 18200) {\r\n            tax = 0;\r\n        } else if (gross > 18200 && gross <= 37000) {\r\n            tax = (gross - 18200) * (19 / 100);\r\n        } else if (gross > 37000 && gross <= 87000) {\r\n            tax = 3572 + ((gross - 37000) * (32.5 / 100));\r\n        } else if (gross > 87000 && gross <= 180000) {\r\n            tax = 19822 + ((gross - 87000) * (37 / 100));\r\n        } else if (gross > 180000) {\r\n            tax = 54232 + ((gross - 180000) * (45 / 100));\r\n        }\r\n\r\n        result.gross = gross;\r\n        result.super = superAnnuation;\r\n        result.tax = tax;\r\n\r\n        return result;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}